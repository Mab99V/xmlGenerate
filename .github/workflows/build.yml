name: Build Electron App

on:
  push:
    branches: [ master ]  # Rama principal (cambia a 'master' si aún usas ese nombre)

jobs:
  build:
    runs-on: windows-latest  # Usamos Windows para compatibilidad con NSIS

    steps:
      # 1. Checkout del código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Versión LTS de Node.js
          cache: 'npm'  # Cache para instalaciones más rápidas

      # 3. Instalar dependencias
      - name: Install dependencies
        run: |
          npm install
          npm install electron-builder@latest --save-dev  # Instalar versión más reciente
      # 4. Compilar la aplicación
      - name: Build application
        run: npm run build
        env:
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: 'true'  # Evita errores de módulos
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token automático de GitHub

      # 5. Subir artefactos
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-installer
          path: dist/
          retention-days: 3  # Los artefactos se eliminarán automáticamente después de 3 días

      # 6. (Opcional) Crear release solo si se hace push a una tag
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Build version ${{ github.ref }}
            Generated by GitHub Actions
          draft: false
          prerelease: false
